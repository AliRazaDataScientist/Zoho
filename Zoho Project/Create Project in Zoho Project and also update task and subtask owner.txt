void automation.Assign_Deal_Owner_to_Task_in_Zoho_Project(String id_deal)
{
id_project = null;
user_zpuid = null;
deal = zoho.crm.getRecordById("Deals",id_deal);
projectname = deal.getJSON("Deal_Name");
dealowneremail = deal.get("Owner").get("email");
if(dealowneremail != null)
{
	mpParameters = Map();
	mpParameters.put("user_type","active");
	users = invokeurl
	[
		url :"https://projectsapi.zoho.com/restapi/portal/gatewaybusinessbrokers/users/"
		type :GET
		parameters:mpParameters
		connection:"projects"
	];
	for each  user in users.get("users")
	{
		if(user.get("email") == dealowneremail)
		{
			user_zpuid = user.get("id");
			break;
		}
	}
}
createfolder_in_WD = zoho.workdrive.createFolder(projectname,"vkmey9063a9f5bbc94de2b64cfea13418b011","workdrive_con");
data = createfolder_in_WD.getJSON("data");
if(data != null)
{
	folder_id = data.getJSON("id");
}
templateid = "1966075000001401052";
project = Map();
project.put("name",projectname);
project.put("template_id",templateid);
project.put("owner",user_zpuid);
project.put("UDF_CHAR1","https://workdrive.zoho.com/31ii4293ee7d3552a4dad91c24e90b9ef1543/teams/31ii4293ee7d3552a4dad91c24e90b9ef1543/ws/vkmey9063a9f5bbc94de2b64cfea13418b011/folders/" + folder_id);
project.put("UDF_CHAR2",folder_id);
createProject = invokeurl
[
	url :"https://projectsapi.zoho.com/restapi/portal/gatewaybusinessbrokers/projects/"
	type :POST
	parameters:project
	connection:"projects"
];
if(createProject.get("projects").size() > 0)
{
	id_project = createProject.get("projects").getJSON("id");
	deal_update_map = Map();
	deal_update_map.put("Zoho_Project_ID",id_project);
	info zoho.crm.updateRecord("Deals",id_deal,deal_update_map);
	contdet = Map();
	contdet.put("id",id_deal);
	mp = Map();
	mp.put("name",projectname);
	mp.put("deals",contdet.toList());
	datalist = List();
	datalist.add(mp);
	datamp = Map();
	datamp.put("data",datalist);
	resp = invokeurl
	[
		url :"https://www.zohoapis.com/crm/v7/Deals/" + id_deal + "/Zoho_Projects/" + id_project
		type :POST
		parameters:datamp.toString()
		connection:"crm_con"
	];
	info resp;
	mpParameters = Map();
	mpParameters.put("user_type","active");
	users = invokeurl
	[
		url :"https://projectsapi.zoho.com/restapi/portal/gatewaybusinessbrokers/users/"
		type :GET
		parameters:mpParameters
		connection:"projects"
	];
	for each  user in users.get("users")
	{
		if(user.get("email") == dealowneremail)
		{
			user_zpuid = user.get("zpuid");
			break;
		}
	}
}
if(user_zpuid != null && id_project != null)
{
	getTasks = invokeurl
	[
		url :"https://projectsapi.zoho.com/restapi/portal/gatewaybusinessbrokers/projects/" + id_project + "/tasks/"
		type :GET
		connection:"projects"
	];
	alltasks = getTasks.get("tasks");
	for each  task in alltasks
	{
		task_id = task.get("id");
		getsubTasks = invokeurl
		[
			url :"https://projectsapi.zoho.com/restapi/portal/gatewaybusinessbrokers/projects/" + id_project + "/tasks/" + task_id + "/subtasks/"
			type :GET
			connection:"projects"
		];
		if(getsubTasks != "" && getsubTasks != null)
		{
			subtasks = getsubTasks.getJSON("tasks");
			for each  sub_task in subtasks
			{
				sub_task_owner = sub_task.get("details").get("owners").get(0).get("name");
				if(sub_task_owner == "Unassigned")
				{
					sub_task_id = sub_task.getJSON("id");
					url = "https://projectsapi.zoho.com/restapi/portal/gatewaybusinessbrokers/projects/" + id_project + "/tasks/" + sub_task_id + "/";
					params = Map();
					params.put("person_responsible",user_zpuid);
					response = invokeurl
					[
						url :url
						type :POST
						parameters:params
						connection:"projects"
					];
					info response;
				}
			}
		}
		else
		{
			task_owner = task.get("details").get("owners").get(0).get("name");
			if(task_owner == "Unassigned")
			{
				url = "https://projectsapi.zoho.com/restapi/portal/gatewaybusinessbrokers/projects/" + id_project + "/tasks/" + task_id + "/";
				params = Map();
				params.put("person_responsible",user_zpuid);
				response = invokeurl
				[
					url :url
					type :POST
					parameters:params
					connection:"projects"
				];
				info response;
			}
		}
	}
}

}


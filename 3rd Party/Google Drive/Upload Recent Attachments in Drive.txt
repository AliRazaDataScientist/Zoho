///// Generate access token here
paramMap = Map();
paramMap.put("client_id",client_id);
paramMap.put("client_secret",client_secret);
paramMap.put("refresh_token",refresh_token);
paramMap.put("grant_type","refresh_token");
response = invokeurl
[
	url :"https://oauth2.googleapis.com/token"
	type :POST
	parameters:paramMap.toMap()
	content-type:"application/x-www-form-urlencoded"
];
accessToken = response.get("access_token");
headersMap = Map();
headersMap.put("Authorization","Bearer " + accessToken);
headersMap.put("Content-Type","application/json");
////////
sowrec = zoho.crm.getRecordById("SOWs",id);
deal_id = sowrec.getJSON("Event_Project_Name").getJSON("id");
deal_rec = zoho.crm.getRecordById("Deals",deal_id);
subfolders_id = deal_rec.getJSON("Sub_Folders_ID");
sow_folder_id = subfolders_id.getJSON("SOW");
/////Get attachments
relatt = zoho.crm.getRelatedRecords("Attachments","SOWs",id);
if(relatt.size() > 0)
{
	for each  rec in relatt
	{
		createdtime = rec.getJSON("Created_Time").replaceAll("T"," ");
		today_datetime = zoho.currenttime;
		difference = createdtime.timeBetween(today_datetime);
		stringlength = difference.length();
		str = difference.getPrefix(":").toNumber();
		if(stringlength <= 4 && str <= 10)
		{
			fileId = rec.get("id");
			fileName = rec.get("File_Name");
			fileContent = invokeurl
			[
				url :"https://www.zohoapis.com/crm/v2/SOWs/" + id + "/Attachments/" + fileId
				type :GET
				connection:"crm_con"
			];
			metaData = Map();
			metaData.put("name",fileName);
			metaData.put("mimeType","application/octet-stream");
			parentsList = List();
			parentsList.add(sow_folder_id);
			metaData.put("parents",parentsList);
			metaPart = Map();
			metaPart.put("stringPart","true");
			metaPart.put("paramName","metadata");
			metaPart.put("content",metaData.toString());
			metaPart.put("contentType","application/json");
			mimeType = "application/octet-stream";
			if(fileName.endsWith(".pdf"))
			{
				mimeType = "application/pdf";
			}
			else if(fileName.endsWith(".docx"))
			{
				mimeType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
			}
			else if(fileName.endsWith(".doc"))
			{
				mimeType = "application/msword";
			}
			else if(fileName.endsWith(".jpg") || fileName.endsWith(".jpeg"))
			{
				mimeType = "image/jpeg";
			}
			else if(fileName.endsWith(".png"))
			{
				mimeType = "image/png";
			}
			else if(fileName.endsWith(".txt"))
			{
				mimeType = "text/plain";
			}
			else if(fileName.endsWith(".xlsx"))
{
	mimeType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
}
else if(fileName.endsWith(".xls"))
{
	mimeType = "application/vnd.ms-excel";
}
else if(fileName.endsWith(".pptx"))
{
	mimeType = "application/vnd.openxmlformats-officedocument.presentationml.presentation";
}
else if(fileName.endsWith(".ppt"))
{
	mimeType = "application/vnd.ms-powerpoint";
}
else if(fileName.endsWith(".csv"))
{
	mimeType = "text/csv";
}
else if(fileName.endsWith(".zip"))
{
	mimeType = "application/zip";
}
else if(fileName.endsWith(".rar"))
{
	mimeType = "application/vnd.rar";
}
else if(fileName.endsWith(".gif"))
{
	mimeType = "image/gif";
}
else if(fileName.endsWith(".bmp"))
{
	mimeType = "image/bmp";
}
else if(fileName.endsWith(".svg"))
{
	mimeType = "image/svg+xml";
}
else if(fileName.endsWith(".mp4"))
{
	mimeType = "video/mp4";
}
else if(fileName.endsWith(".mp3"))
{
	mimeType = "audio/mpeg";
}
else if(fileName.endsWith(".json"))
{
	mimeType = "application/json";
}
else if(fileName.endsWith(".xml"))
{
	mimeType = "application/xml";
}

			filePart = Map();
			filePart.put("paramName","file");
			filePart.put("content",fileContent);
			filePart.put("fileName",fileName);
			filePart.put("contentType",mimeType);
			filesList = List();
			filesList.add(metaPart);
			filesList.add(filePart);
			uploadResp = invokeurl
			[
				url :"https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&supportsAllDrives=true"
				type :POST
				headers:headersMap
				files:filesList
			];
			info uploadResp;
		}
	}
}
info zoho.crm.updateRecord("SOWs",id,{"UploadData":false,"Google_Drive_Link":"https://drive.google.com/drive/folders/" + sow_folder_id});